From 168e3eff41b31d50b02cee8e71ef32fe2a5eb40a Mon Sep 17 00:00:00 2001
From: Samuel Dionne-Riel <samuel@dionne-riel.com>
Date: Mon, 29 Jun 2020 01:02:31 -0400
Subject: [PATCH 1/2] mediatek-leds: Implement default-trigger

---
 drivers/misc/mediatek/leds/leds_drv.c       |  6 ++++--
 drivers/misc/mediatek/leds/mt6755/leds.c    | 10 ++++++++++
 drivers/misc/mediatek/leds/mt6755/leds_sw.h |  1 +
 3 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/drivers/misc/mediatek/leds/leds_drv.c b/drivers/misc/mediatek/leds/leds_drv.c
index 2edd78913aad..8a4f630927e2 100755
--- a/drivers/misc/mediatek/leds/leds_drv.c
+++ b/drivers/misc/mediatek/leds/leds_drv.c
@@ -770,13 +770,15 @@ static int mt65xx_leds_probe(struct platform_device *pdev)
 			goto err;
 		}
 
+		/* Configure the custom data */
 		g_leds_data[i]->cust.mode = cust_led_list[i].mode;
 		g_leds_data[i]->cust.data = cust_led_list[i].data;
 		g_leds_data[i]->cust.name = cust_led_list[i].name;
-
-		g_leds_data[i]->cdev.name = cust_led_list[i].name;
 		g_leds_data[i]->cust.config_data = cust_led_list[i].config_data;	/* bei add */
 
+		/* Configure the LED's classdev */
+		g_leds_data[i]->cdev.name = cust_led_list[i].name;
+		g_leds_data[i]->cdev.default_trigger = cust_led_list[i].default_trigger;
 		g_leds_data[i]->cdev.brightness_set = mt65xx_led_set;
 		g_leds_data[i]->cdev.blink_set = mt65xx_blink_set;
 
diff --git a/drivers/misc/mediatek/leds/mt6755/leds.c b/drivers/misc/mediatek/leds/mt6755/leds.c
index 24739f64c5b3..58eae85d956c 100755
--- a/drivers/misc/mediatek/leds/mt6755/leds.c
+++ b/drivers/misc/mediatek/leds/mt6755/leds.c
@@ -236,6 +236,8 @@ struct cust_mt65xx_led *get_cust_led_dtsi(void)
 				pled_dtsi[i].data = -1;
 			} else {
 				isSupportDTS = true;
+
+				/* led_mode node */
 				ret =
 				    of_property_read_u32(led_node, "led_mode",
 							 &mode);
@@ -251,6 +253,7 @@ struct cust_mt65xx_led *get_cust_led_dtsi(void)
 					pled_dtsi[i].mode = 0;
 				}
 
+				/* data node */
 				ret =
 				    of_property_read_u32(led_node, "data",
 							 &data);
@@ -266,6 +269,7 @@ struct cust_mt65xx_led *get_cust_led_dtsi(void)
 					pled_dtsi[i].data = -1;
 				}
 
+				/* pwm_config node */
 				ret =
 				    of_property_read_u32_array(led_node,
 							       "pwm_config",
@@ -293,6 +297,12 @@ struct cust_mt65xx_led *get_cust_led_dtsi(void)
 					LEDS_DEBUG
 					    ("led dts can not get pwm config data.\n");
 
+				/* led_mode node */
+
+				pled_dtsi[i].default_trigger = of_get_property(led_node, "linux,default-trigger", NULL);
+
+				/* (Done with reading device tree node) */
+
 				switch (pled_dtsi[i].mode) {
 				case MT65XX_LED_MODE_CUST_LCM:
 					pled_dtsi[i].data =
diff --git a/drivers/misc/mediatek/leds/mt6755/leds_sw.h b/drivers/misc/mediatek/leds/mt6755/leds_sw.h
index b1b28164eb43..45c7690e7590 100644
--- a/drivers/misc/mediatek/leds/mt6755/leds_sw.h
+++ b/drivers/misc/mediatek/leds/mt6755/leds_sw.h
@@ -149,6 +149,7 @@ struct cust_mt65xx_led {
 	enum mt65xx_led_mode mode;
 	long data;
 	struct PWM_config config_data;
+	const char		*default_trigger;	/* Trigger to use */
 };
 
 /**
-- 
2.25.4

